// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        // SDK and tools
        compileSdkVersion = 34
        minSdkVersion = 24
        targetSdkVersion = 34
        buildToolsVersion = '34.0.0'
        
        // Kotlin
        kotlinVersion = '1.9.20'
        
        // Hilt
        hiltVersion = '2.48.1'
        
        // Compose
        composeVersion = '1.5.4'
        composeCompilerVersion = '1.5.3'
        
        // Other dependencies
        roomVersion = '2.6.0'
        navVersion = '2.7.4'
        workVersion = '2.8.1'
    }
    
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    
    dependencies {
        classpath 'com.android.tools.build:gradle:8.13.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hiltVersion"
        classpath 'com.google.gms:google-services:4.4.0'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.9'
        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.android.application' version '8.13.0' apply false
    id 'com.android.library' version '8.13.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.20' apply false
    id 'com.google.dagger.hilt.android' version '2.48.1' apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.20' apply false
    id 'com.google.devtools.ksp' version '1.9.20-1.0.14' apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

// Apply common configurations to all subprojects
subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            android {
                compileSdkVersion rootProject.ext.compileSdkVersion
                
                defaultConfig {
                    minSdkVersion rootProject.ext.minSdkVersion
                    targetSdkVersion rootProject.ext.targetSdkVersion
                    versionCode 1
                    versionName "1.0"
                    
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                    
                    // Enable vector drawable support
                    vectorDrawables.useSupportLibrary = true
                }
                
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }
                
                kotlinOptions {
                    jvmTarget = '17'
                }
                
                buildFeatures {
                    viewBinding true
                    buildConfig true
                }
                
                packagingOptions {
                    resources {
                        excludes += ['META-INF/AL2.0', 'META-INF/LGPL2.1']
                    }
                }
            }
        }
    }
}

// Configure Java toolchains for consistent builds
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
            '-Xjvm-default=all',
            '-opt-in=kotlin.RequiresOptIn'
        ]
    }
}

// Configure Java compilation
allprojects {
    tasks.withType(JavaCompile).configureEach {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
}
