# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true

# Enable build cache to speed up clean builds
org.gradle.caching=true

# Enable configuration on demand to improve build performance
org.gradle.configureondemand=true

# Enable Gradle Daemon for better build performance
org.gradle.daemon=true

# Enable parallel test execution
org.gradle.workers.max=4

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
android.useAndroidX=true
# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true

# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official

# Set Gradle Java home to Android Studio JBR
org.gradle.java.home=C:/Program Files/Android/Android Studio1/jbr

# Kotlin JVM toolchain
kotlin.jvmToolchain.jdkHome=C:/Program Files/Android/Android Studio1/jbr
kotlin.compiler.execution.strategy=in-process

# KSP options
ksp.incremental=false

# Enable R8 full mode for better code shrinking and obfuscation
android.enableR8.fullMode=true

# Resource optimization is now enabled by default in AGP 8.0+
# android.enableResourceOptimizations is no longer needed

# Desugaring is now handled automatically by AGP 8.0+
# android.enableDexingArtifactTransform.desugaring is no longer needed

# BuildConfig generation is now controlled by the buildFeatures block in build.gradle
# android.defaults.buildfeatures.buildconfig is no longer needed

# Build features are now configured in the module-level build.gradle file
# using the buildFeatures block. For example:
# android {
#     buildFeatures {
#         viewBinding true
#         dataBinding true
#         compose true
#     }
# }

# Code shrinking and minification are now configured in the module-level build.gradle file
# using the buildTypes block. For example:
# buildTypes {
#     release {
#         minifyEnabled true
#         shrinkResources true
#         proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
#     }
# }

# These properties are now handled automatically by the latest Android Gradle Plugin
# and no longer need to be set manually.

# Resource shrinking and optimization are now configured in the module-level build.gradle file
# using the buildTypes block. For example:
# buildTypes {
#     release {
#         minifyEnabled true
#         shrinkResources true
#         proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
#     }
# }

# Obfuscation and optimization are now handled by R8 and configured in the module-level build.gradle file
# using the buildTypes block and proguard-rules.pro files.
